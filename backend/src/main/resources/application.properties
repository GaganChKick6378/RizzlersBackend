# Application Configuration
spring.application.name=rizzlers-backend
server.port=${CONTAINER_PORT:8080}
# Allow context path to be configurable with empty default for health checks
server.servlet.context-path=${CONTEXT_PATH:/}
spring.profiles.active=${ENV:dev}

# Development Environment Indicator
application.environment=${ENV:Development}

# Allow bean definition overriding to resolve ObjectMapper conflict
spring.main.allow-bean-definition-overriding=true

# Enable debug logging for GraphQL and related services
logging.level.com.kdu.rizzlers.service.impl.GraphQLPropertyServiceImpl=DEBUG
logging.level.com.kdu.rizzlers.service.impl.TenantConfigurationServiceImpl=DEBUG

# Add more detailed logging for HTTP client
logging.level.org.springframework.web.reactive.function.client.ExchangeFunctions=TRACE
logging.level.reactor.netty.http.client=DEBUG
# Add WebClient response logging
logging.level.org.springframework.web.reactive.function.client=DEBUG

# Disable auto-generated security password
spring.security.user.password=disabled
spring.security.basic.enabled=false

# Enable servlet logging to debug health check issues
server.tomcat.accesslog.enabled=true
server.tomcat.accesslog.pattern=%h %l %u %t "%r" %s %b %D "User-Agent: %{User-Agent}i"

# PostgreSQL Database Configuration
spring.datasource.url=jdbc:postgresql://ibe2025-kdu25rdsinstance61f66da9-8harocvoxzt8.c3ysg6m2290x.ap-south-1.rds.amazonaws.com:5432/Database_10_dev
spring.datasource.username=Team_10
spring.datasource.password=Password10
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate Configuration
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=none
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.show-sql=true

# CORS Configuration
application.cors.allowed-origins=*
application.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
application.cors.allowed-headers=Origin,Content-Type,Accept,Authorization
application.cors.max-age=3600

spring.sql.init.mode=never
spring.sql.init.schema-locations=classpath:schema.sql
spring.sql.init.data-locations=classpath:data.sql

# Flyway Migration Configuration
spring.flyway.enabled=true
spring.flyway.baseline-on-migrate=true
spring.flyway.locations=classpath:db/migration

# Actuator Configuration
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=always
management.endpoints.web.base-path=/actuator
management.endpoint.health.enabled=true
# Make sure health check is not secured
management.endpoint.health.probes.enabled=true
management.health.livenessState.enabled=true
management.health.readinessState.enabled=true
# Don't require authentication for actuator endpoints
management.endpoints.web.exposure.exclude=

# Fix for slow starting app - disable JMX
spring.jmx.enabled=false

# Adjust the server connection timeout for health checks
server.tomcat.connection-timeout=20000
server.tomcat.max-connections=10000
server.tomcat.accept-count=100
server.tomcat.threads.max=200

#For graph ql
# Enable GraphiQL UI
graphql.graphiql.enabled=true
graphql.servlet.mapping=/graphql
graphql.graphiql.path=/graphiql
graphql.playground.enabled=true
graphql.playground.endpoint=/graphql

# GraphQL Configuration
graphql.endpoint=https://ag5psk7jtvgvffd3fxffxarqcu.appsync-api.ap-south-1.amazonaws.com/graphql
graphql.api-key=da2-ir7h5rh5nfckbmpx5to6qpfttq
graphql.api-key-header=X-Api-Key
graphql.timeout=10000
